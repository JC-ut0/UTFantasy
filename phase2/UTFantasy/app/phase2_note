#########
# Step 1
    - Copy all files to phase2 directory, and renamed some file from .phase1. to .phase2.
    - Created phase2_note.txt and phase2_TODO.txt for later notes.

#########
# Step 2
Files affected: LoginActivity.java, activity_login.xml
New feature: Remember password, and full screen activity.
            - now if the user selects remember password, his password and username will be stored
            for his next login.

#########
# Step 3
Code affected: MapManager.mapInitialization()
Flaw: Some of "treeImage" are missing in the highMap.
Fix: Add missing "treeImage" to the highMap.

#########
# Step 4
File affected: Person.java, Player.java
 Rename pokemon to pokemonList, since this variable refers to an ArrayList.

#########
# Step 5
File added: README
File affected: all files
Created README file, Reformat for all files.

#########
# Step 6
File Added: PotionFactory
File affected: NPC, SellerNPC, FighterNPC, HealerNPC, ShopActivity, ShopDialog
Create a PotionFactory which can be used to create different potions.
Delete some unnecessary methods in all NPC classes.
Change the method of trade.
Rename ShopDialog.

#########
# Step 7
Package affected: Map
Flaw: MapManager violates SOLID, refactor the whole map system according to MVP and SOLID. Use
design patterns as much as possible. Please see the details of whole structure in uml.

########
# Step 8
Flaw: ArrayList is too specific to construct.
Fix: Change ArrayList to List.

########
# Step 9
File affected: MenuActivity.java, PlayerInfoActivity.java
Flaw: These activities violate SOLID
Fix: create a InfoMediator.java, pass the information to the activity. And create ItemAdapter to
control the action from the activity.

########
# Step 10
File affected: PokeSelectActivity.java
Create a new activity and the following java class. Now we can select pokemons at the beginning of
a fight.

########
# Step 11
File added: ProductAdapter
Create a new ShopActivity. Use ListView to present Products in the shop. We can easily add products
in the shop without modifying too much code, which follows Open/Closed Principle.

########
# Step 12ï¼š
File affected: RedPotion, PinkPotion, PurplePotion,PotionFactory
Flaw: there exists static methods and variables.
Fix: get rid of static methods and variables.

########
#step 13:
File added: ProductCreator, ProductBuilder, PotionBuilder
Use Builder Design Pattern to create products in shop.

